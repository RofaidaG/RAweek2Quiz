lmformula
glm(lmformula, "binomial", trainspam)
trainspam $numtype = as.numeric(trainspam$type) - 1
lmformula = reformulate(names(trainspam), response = "numType")
glm(lmformula, "binomial", trainspam)
lmformula = reformulate(names(trainspam), response = "numtype")
glm(lmformula, "binomial", trainspam)
?cv.glm
?cv.glm
library("boot")
?cv.glm
getwd
getwd()
setwd("C:\Users\rofaida.goda\RAweek2")
getwd()setwd("C:\Users\rofaida.goda\RAweek2")
setwd("C:\Users\rofaida.goda\RAweek2")
setwd("C:/Users/rofaida.goda/RAweek2")
list.files()
unzip("activity.zip")
?unzip
read.csv("activity.csv")
activity = read.csv("activity.csv")
summary(activity)
head(activity)
table(activity$steps)
library(xtable)
xtable(activity$steps)
table(activity$steps)
summary(activity)
boxplot(activity$steps)
boxplot(t(activity$steps))
boxplot(activity$steps)
boxplot(t(activity$steps))
boxplot(t(activity$steps))
dim(activity)
boxplot(t(activity$steps))[1:500]
boxplot(activity$steps)
boxplot(log10(activity$steps))
boxplot(activity$steps)
min(activity$steps)
max(activity$steps)
sum(activity$steps)
?sum
sum(activity$steps, na.rm = TRUE)
min(activity$steps, na.rm = TRUE)
max(activity$steps, na.rm = TRUE)
summary(activity)
class(activity$date)
as.Date(activity$date)
as.Date(activity$date) [1]
weekday(as.Date(activity$date) [1])
weekdays(as.Date(activity$date) [1])
?mutate
library("dplyr")
?mutate
mutate(activity, date = as.Date(date), day = weekdays(date))
activity
activity = mutate(activity, date = as.Date(date), day = weekdays(date))
activity
summary(ac)
summary(activity)
table(activity$interval)
count(activity$interval)
length(activity$interval)
length(activity$interval)*61
dim(activity)
length(activity$interval)*5
length(activity$interval)*5/60
2355*5
2355*5/60
activity %>% group_by(date) %>%summarise(mean(steps
))
activity %>% group_by(date)                                         %>%summarise(mean(steps,rm.na = TRUE ))
bydate = activity %>% group_by(date)                                         %>%summarise(mean(steps,rm.na = TRUE ))
byda
bydate
dim(bydate)
tail(bydate)
unique(month(bydate$date))
library(lubridate)
unique(month(bydate$date))
sum(is.na(activity$steps))
mean(activity$steps)
mean(activity$steps, rm.na = TRUE)
mean(activity$steps, rm.na = FALSE)
?mean
mean(activity$steps, na.rm  = FALSE)
mean(activity$steps, na.rm  = TRUE)
mean(activity$steps)
activity %>% group_by(date)                                         %>%summarise(mean(steps,na.rm = TRUE ))
activity %>% group_by(date)%>% filter( date = "2012-10-01")
activity %>% group_by(date)%>% filter( date == "2012-10-01")
activity %>% group_by(date)%>% filter( date == "2012-10-01") %>% select(steps)
activity %>% group_by(date)%>% filter( date == "2012-10-01") %>% select(steps)%>% sum(steps)
steps = activity %>% group_by(date)%>% filter( date == "2012-10-01") %>% select(steps)
activity %>% group_by(date)%>% filter( date == "2012-10-01") %>% select(steps)
steps = activity %>% group_by(date)%>% filter( date == "2012-10-01") %>% select(steps)
stem()
step()
steps
steps [1]
steps = steps [1]
steps = activity %>% group_by(date)%>% filter( date == "2012-10-01") %>% select(steps)
steps
steps$steps
activity %>% group_by(date)                                         %>%summarise(avgsteps = mean(steps,na.rm = TRUE ))
steps = activity %>% group_by(date)%>% filter( date == "2012-10-08") %>% select(steps)
steps$steps
?hist
bysteps = activity %>% group_by(date)                                         %>%summarise(avgsteps =                                        mean(steps,na.rm =TRUE ))
bysteps
hist(bysteps$avgsteps)
max$byst
max(bysteps$avgsteps, na.rm = TRUE
)
qplot(avgsteps, bysteps)
librray(ggplot2)
library(ggplot2)
qplot(avgsteps, bysteps)
qplot(avgsteps, data = bysteps)
qplot(avgsteps, data = bysteps, colour = "red")
qplot(avgsteps, data = bysteps, colour = "red", fil = "blue")
qplot(avgsteps, data = bysteps, colour = "red", fill = "blue")
qplot(avgsteps, data = bysteps, colour = "red", fil = "blue")
qplot(avgsteps, data = bysteps, colour = "red", fil = "blue")
?qplot
qplot(avgsteps, data = bysteps, colour = "red", fil = "blue", xlim = "mean steps")
qplot(avgsteps, data = bysteps, colour = "red", fil = "blue", xlab = "mean steps")
qplot(avgsteps, data = bysteps, color = "red", fil = "blue", xlim = "mean steps")
?qplot
qplot(avgsteps, data = bysteps, color = "red", fil = "blue", xlim = "mean steps")
sumbysteps = activity %>% group_by(date)                                         %>%summarise(avgsteps =                                        sum(steps,na.rm =TRUE ))
sumbysteps
sumbysteps = activity %>% group_by(date)                                         %>%summarise(sumsteps =                                        sum(steps,na.rm =TRUE ))
sumbysteps
hist(sumbysteps$sumsteps)
sumbysteps = activity %>% group_by(date)                                         %>%summarise(sumsteps =                                        sum(steps,na.rm =TRUE ))
qplot(sumbysteps, data = bysteps, colour = "red",                xlab = "total number of steps taken each day", binwidth = 1000)
qplot(sumbysteps, data = bysteps, colour = "red",                xlab = "total number of steps taken each day")
qplot(sumbysteps, data = bysteps, colour = "red",                xlab = "total number of steps taken each day")
qplot(sumsteps, data = bysteps, colour = "red",                xlab = "total number of steps taken each day")
qplot(sumsteps, data = sumbysteps, colour = "red",                xlab = "total number of steps taken each day")
qplot(sumsteps, data = sumbysteps, colour = "red",                xlab = "total number of steps taken each day", binwidth = 1000)
data = read.csv("activity.csv")
data
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN = sum, na.rm = TRUE)
qplot(total.steps, binwidth = 1000, xlab = "total number of steps taken each day")
avg = mean (sumbysteps$sumsteps)
avg
med  = median (sumbysteps$sumsteps)
med
summary(activity)
byinterval = activity %>% group_by(interval) %>% summarize(avg = mean(steps, na.rm = TRUE ))
byinterval
qplot(byinterval$interval, byinterval$avg)
qplot(byinterval$interval, byinterval$avg, geom = "line")
qplot(byinterval$interval, byinterval$avg, geom = "line", xlab = "Interval", ylab = "Average number of steps taken")
which.max(byinterval$avg)
byinterval[ which.max(byinterval$avg),1]
?mutate
setwd("C:/Users/rofaida.goda/RAweek2")
unzip("activity.zip")
read.csv("activity.csv")
#transform the data into suitable format
#change date class and add a new column presenting
# week day
library("dplyr")
activity = mutate(activity, date = as.Date(date),                            day = weekdays(date))
activity
setwd("C:/Users/rofaida.goda/RAweek2")
unzip("activity.zip")
read.csv("activity.csv")
#transform the data into suitable format
#change date class and add a new column presenting
# week day
library("dplyr")
activity = mutate(activity, date = as.Date(date),                            day = weekdays(date))
?mutate
#reading the data
setwd("C:/Users/rofaida.goda/RAweek2")
unzip("activity.zip")
read.csv("activity.csv")
#transform the data into suitable format
#change date class and add a new column presenting
# week day
library("dplyr")
activity = mutate(activity, date = as.Date(date),                            day = weekdays(date))
#reading the data
setwd("C:/Users/rofaida.goda/RAweek2")
unzip("activity.zip")
read.csv("activity.csv")
#transform the data into suitable format
#change date class and add a new column presenting
# week day
library("dplyr")
activity = mutate(activity, date = as.Date(date),                            day = weekdays(date))
sumbysteps = activity %>% group_by(date)                                         %>%summarise(sumsteps =                                        sum(steps,na.rm =TRUE ))
#making histogram
qplot(sumsteps, data = sumbysteps, colour = "red",                xlab = "total number of steps taken each day")
avg = mean (sumbysteps$sumsteps)
med  = median (sumbysteps$sumsteps)
byinterval = activity %>% group_by(interval) %>% summarize(avg = mean(steps, na.rm = TRUE ))
qplot(byinterval$interval, byinterval$avg, geom = "line", xlab = "Interval", ylab = "Average number of steps taken")
max5min = byinterval[ which.max(byinterval$avg),1]
complete.cases(activity)
sum(! complete.cases(activity))
is.na(activity$steps)
is.na(activity$steps) == TRUE
sum(is.na(activity$steps))
sum(is.na(activity$interval))
activity$interval
summary(acti)
summary(activity)
bydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
bydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
activity %>%
group_by (date)
library("dplyr")
activity %>%
group_by(date)
bydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
bydate
for (i in 1: nrows(activity) )
{
if (is.na(activity$steps[i]))
no = which [ bydate$date  == activity$date[i]]
activity $steps [i] = bydate$avg[no]
}
nrow(activity)
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
no = which [ bydate$date  == activity$date[i]]
activity $steps [i] = bydate$avg[no]
}
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
bydate$date  == activity$date[i]
activity $steps [i] = bydate$avg[no]
}
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
bydate$date %in% activity$date[i]
activity $steps [i] = bydate$avg[no]
}
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
bydate$date %in% activity$date[i]
}
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
ju= bydate$date %in% activity$date[i]
}
ju
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
which[bydate$date %in% activity$date[i],]
}
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
which[bydate$date == activity$date[i],]
}
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
bydate[bydate$date == activity$date[i],2]
}
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
z=  bydate[bydate$date == activity$date[i],2]
}
z
activity$steps
activity = read.csv("activity.csv")
activity
activity$steps
sum(is.na(activity$steps))
which [is.na(activity$steps)]
?which
activity [is.na(activity$steps),3]
str(activity)
activity [is.na(activity$steps),2]
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
activity$steps[i]=bydate[bydate$date==activity$date[i],2]
}
is.na(activity$steps)
sum(is.na(activity$steps))
complete.cases(activity)
complete.cases(activity)
complete.cases(activity$steps)
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
activity$steps[i]=bydate[bydate$date==activity$date[i],2]
}
sumbydate = activity %>% group_by (date) %>% summarize(total = sum(steps, na.rm = TRUE))
activity
read.csv("Activity.csv")
activity = read.csv("Activity.csv")
sumbydate = activity %>% group_by (date) %>% summarize(total = sum(steps, na.rm = TRUE))
sumbydate
bydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
activity$steps[i]=bydate[bydate$date==activity$date[i],2]
}
sumbydate = activity %>% group_by (date) %>% summarize(total = sum(steps, na.rm = TRUE))
qplot(total, data = sumbydate, colour = "red",xlab = "total number of steps taken each day")
total number of missing values in the dataset = `r missingrows`
{```r}
bydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
activity$steps[i]=bydate[bydate$date==activity$date[i],2]
}
sumbydate = activity %>% group_by (date) %>% summarize(total = sum(steps, na.rm = TRUE))
library("qplot")
qplot(total, data = sumbydate, colour = "red",xlab = "total number of steps taken each day")
bydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
activity$steps[i]=bydate[bydate$date==activity$date[i],2]
}
sumbydate = activity %>% group_by (date) %>% summarize(total = sum(steps, na.rm = TRUE))
library("ggplot2")
qplot(total, data = sumbydate, colour = "red",xlab = "total number of steps taken each day")
sumbydate$steps
sumbydate
activity$steps
activity
activity$steps
activity = read.csv("Activity.csv")
summary(activity)
bydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
activity$steps[i]=bydate[bydate$date==activity$date[i],2]
}
summary(activity)
summary(activity)
avgbydate[bydate$date==activity$date[1],2]
avgbydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
avgbydate
activity
activity = read.csv("activity.csv")
activity
summary(activity)
avgbydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
avgbydate
tail(avgbydate )
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
activity$steps[i]=avgbydate[bydate$date==activity$date[i],2]
}
summary(activity)
activi
activity
is.na(activity$steps)
sum(is.na(activity$steps))
avgbydate
activity
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
{
x = avgbydate[bydate$date==activity$date[i],2]
if (is.nan(x))
{
y = avgiterval[avgbyinterval$date==activity$date[i],2]
activity$steps[i] = y
}
activity$steps[i] = y
}
}
k = "NaN"
class(k)
is.nan(k)
k = NaN
is.nan(k)
x = avgbydate[bydate$date==activity$date[1],2]
x
is.nan(x)
is.nan(x[1])
x
x[1]
x[[1]]
is.nan(x[[1]])
x = avgbydate[bydate$date==activity$date[1],2]
y = avgiterval[avgbyinterval$date==activity$date[i],2]
avgbyinterval = activity %>% group_by (interval) %>% summarize(avg = mean(steps, na.rm = TRUE))
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
{
x = avgbydate[bydate$date==activity$date[i],2]
if (is.nan(x[[1]]))
{
y = avgbyinterval[avgbyinterval$date==activity$date[i],2]
activity$steps[i] = y
}
activity$steps[i] = y
}
}
summary(activity)
activity
activity$steps
activity = read.csv("Activity.csv")
activity2 = activity
avgbydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
avgbyinterval = activity %>% group_by (interval) %>% summarize(avg = mean(steps, na.rm = TRUE))
avgbydate
is.nan(avgbydate$avg)
is.nan(avgbyinterval$avg)
sum(is.nan(avgbyinterval$avg))
str(activity)
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
{
x = avgbydate[bydate$date==activity$date[i],2]
if (is.nan(x[[1]]))
{
y = avgbyinterval[avgbyinterval$date==activity$date[i],2]
activity2[i,1] = y
}
activity2[i,1] = x}
}
activity
activity$steps
activity = read.csv("activity.csv")
activity$steps
sumamry(activity$steps)
summary(activity$steps)
which[is.na(activity$steps)]
activity[is.na(activity$steps)]
activity[is.na(activity$steps),]
NArecords = activity[is.na(activity$steps),]
avgbyinterval = activity %>% group_by (interval) %>% summarize(avg = mean(steps, na.rm = TRUE))
avgbyinterval
qplot(activity$steps, activity$date)
qplot(activity$date, activity$steps)
avgbydate = activity %>% group_by (date) %>% summarize(avg = mean(steps, na.rm = TRUE))
qplot(avgbydate$date, avgbydate$avg)
qplot(avgbyinterval$date, avgbyinterval$avg)
qplot(avgbyinterval$date, avgbyinterval$avg)
qplot(avgbyinterval$interval, avgbyinterval$avg)
qplot(avgbydate$date, avgbydate$avg)
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
{
#x = avgbydate[bydate$date==activity$date[i],2]
#       if (is.nan(x[[1]]))
#      {
y = avgbyinterval[avgbyinterval$interval==activity$interval[i],2]
activity2[i,1] = y
#       }
#activity2[i,1] = x}
}
}
activity2
summary(activity2)
summary(activity)
for (i in 1: nrow(activity) )
{
if (is.na(activity$steps[i]))
{activity[i,1] =                                                 avgbyinterval[avgbyinterval$interval==activity$interval[i],2]
}
}
summary(activity)
sumbydate = activity %>% group_by (date) %>% summarize(total = sum(steps, na.rm = TRUE))
library("ggplot2")
qplot(total, data = sumbydate, colour = "red",xlab = "total number of steps taken each day")
missingrows = sum(! complete.cases(activity))
missingrows
library("ggplot2")
qplot(total, data = sumbydate, colour = "red",xlab = "total number of steps taken each day")
activity %>% group_by(interval, day) %>% summarize(mean(steps))
activity %>% group_by(interval, date) %>% summarize(mean(steps))
activity %>% group_by(interval, date)
activity$date <- as.Date(activity$date)
activity$day <- sapply(activity$date, FUN = weekday.or.weekend)
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
activity$date <- as.Date(activity$date)
activity$day <- sapply(activity$date, FUN = weekday.or.weekend)
activity$day
activity %>% group_by(interval, day) %>% summarize(avg = mean(steps))
byweekday = activity %>% group_by(interval, day) %>% summarize(avg = mean(steps))
qplot(data = byweekday, interval, avg, facets = .~ day)
qplot(data = byweekday, interval, avg, facets = .~ day, geaom = lines)
qplot(data = byweekday, interval, avg, facets = .~ day, geaom = "line")
qplot(data = byweekday, interval, avg, facets = .~ day, geom = "line")
